#!/bin/sh /etc/rc.common
#
# Copyright 2014-2018 Ayla Networks, Inc.  All rights reserved.
#

#
# Upgrade U-boot to handle redundant images for OTA, if necessary.
# This is unsafe if it could be interrupted by power-cycle or
# reboot.  This is not expected to be used in the field.
#
START=98

ota_log() {
	echo "otasetup:" $@ >/dev/console
}

#
# Set new u-boot env config.
#
uboot_env_update() {
	cat > /etc/fw_env.config <<EOF
/dev/mtd1 0x80000 0x20000 0x20000
/dev/mtd1 0xa0000 0x20000 0x20000
EOF
}

start() {
	local uboot_bin=/lib/u-boot.lpc32xx.bin

	local temp_env=/tmp/uboot-env.$$
	local temp_config=/tmp/fw_env.config.$$
	local uboot_dev=/dev/mtd1

	#
	# Make sure fw_printenv config is right.
	# If new uboot is already installed, we'll get errors with old config.
	#
	fw_printenv >/dev/null 2>$temp_env
	if grep -qi "Bad CRC" $temp_env
	then
		uboot_env_update

		#
		# if that didn't help, give up.
		#
		fw_printenv >/dev/null 2>$temp_env
		if grep -qi "Bad CRC" $temp_env
		then
			ota_log "fw_printenv: `cat $temp_env`"
			return 0
		fi
	fi

	if [ ! -f $uboot_bin ]
	then
		return 0
	fi

	if grep -q alt_firmware /proc/mtd && grep -q config /proc/mtd
	then
		return 0
	fi

	#
	# check ota_version from uboot.  If set to 0 or not set, we
	# need to reload uboot.  1 indicates config file system needs to be
	# erased and mounted.  2 or greater indicates config has been mounted.
	#
	local ota_version=`fw_printenv -n ota_version 2>/dev/null || echo 0`
	if [ "$ota_version" -ge 1 ]
	then
		return 0
	fi

	cp /etc/fw_env.config $temp_config

	#
	# Save old U-boot env variables
	# change first = to space as needed by fw_setenv
	# 
	fw_printenv | sed -e 's/=/ /' > $temp_env

	if [ -r "$uboot_bin" ]
	then
		#
		# u-boot must be padded to multiple of 128K erase block size
		# dd conf=sync is not available to do this
		#
		let block='128*1024'
		let max_size='512*1024'
		let size=`wc -c < $uboot_bin`
		if [ $size -gt $max_size ]
		then
			ota_log "$uboot_bin too large ($size)"
			return 1
		fi
		! let mod=$size%$block
		if [ $mod != 0 ]
		then
			let pad=$block-$mod
			ota_log "padding $u_boot_bin by $pad"
			dd bs=$pad count=1 < /dev/zero >> $uboot_bin
		fi

		#
		# Install new u-boot
		# 
		ota_log "installing u-boot"
		mtd write $uboot_bin $uboot_dev
		ota_log "u-boot write done.  rc $?"
	else
		ota_log "u-boot file $uboot_bin not found - skipping update"
	fi

	uboot_env_update

	#
	# Add new version env variables
	# Set up to boot first kernel/rootfs, presumably the current one
	#
	cat >> $temp_env <<EOF
ota_version 1
ota_image 0
bootcmd run mtdboot\${ota_image}
mtdpart0 lpc32xx-nand:512K(boot),768K(uboot),\
4M(kernel),50M(rootfs),54M@1280K(firmware),54M(alt_firmware),\
0x1240000@0x6d40000(config)
mtdpart1 lpc32xx-nand:512K(boot),768K(uboot),\
4M@0x3740000(kernel),50M(rootfs),54M@0x3740000(firmware),54M@1280K(alt_firmware),0x1240000@0x6d40000(config)
mtdboot0 setenv nand_kernel_off 0x140000;setenv nand_rootfs_off 0x540000;\
setenv mtdparts \${mtdpart0};run mtdboot;run loadkernel;bootm \${loadaddr}
mtdboot1 setenv nand_kernel_off 0x3740000;setenv nand_rootfs_off 0x3b40000;\
setenv mtdparts \${mtdpart1};run mtdboot;run loadkernel;bootm \${loadaddr}
mtdboot setenv bootargs root=/dev/mtdblock3 rw \
mtdparts=\${mtdparts} ota_image=\${ota_image} rootfstype=jffs2 \
ip=\${ipaddr} ethaddr=\${ethaddr} console=ttyS0,115200n8
EOF

	#
	# Put environment into new format
	# save twice to be sure both copies are updated
	#
	ota_log "setting new redundant u-boot environment variables"
	fw_setenv -s $temp_env
	fw_setenv -s $temp_env

	ota_log "update complete - reboot when ready"
}
